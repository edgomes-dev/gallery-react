{"version":3,"sources":["App.styles.ts","libs/firebase.ts","services/photos.ts","components/PhotoItem/styles.ts","components/PhotoItem/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Container","styled","div","Area","Header","h1","ScreenWarning","PhotoList","UploadForm","form","firebaseApp","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","storage","getStorage","getAll","a","list","imagesFolder","ref","listAll","photoList","items","i","getDownloadURL","photoUrl","push","name","url","insert","file","includes","type","randowName","createId","newFile","uploadBytes","upload","Error","PhotoItem","src","alt","App","useState","uploading","setUploading","loading","setLoading","photos","setPhotos","useEffect","Photos","getPhotos","handleFormSubmit","e","preventDefault","formData","FormData","currentTarget","get","size","result","alert","message","newPhotoList","method","onSubmit","value","className","length","map","item","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11244db3.chunk.js","sourcesContent":["import styled from \"styled-components\"\n\nexport const Container = styled.div`\n    background-color: #27282F;\n    color: #FFF;\n    min-height: 100vh;\n`;\n\nexport const Area = styled.div`\n    margin: auto;\n    max-width: 980px;\n    padding: 30px 0;\n`;\n\nexport const Header = styled.h1`\n    margin: 0;\n    padding: 0;\n    text-align: center;\n    margin-bottom: 30px;\n`;\n\nexport const ScreenWarning = styled.div`\n    text-align: center;\n\n    .emoji \n    {\n        font-size: 50px;\n        margin-bottom: 20px;\n    }\n`;\n\nexport const PhotoList = styled.div`\n    display: grid;\n    grid-template-columns: repeat(4, 1fr);\n    gap: 10px;\n`;\n\nexport const UploadForm = styled.form`\n    background-color: #3D3F43;\n    padding: 15px;\n    border-radius: 10px;\n    margin-bottom: 30px;\n\n    input[type=submit] \n    {\n        background-color: #756DF4;\n        border: 0;\n        color: #FFF;\n        padding: 8px 16px;\n        font-size: 15px;\n        border-radius: 10px;\n        margin: 0 20px;\n        cursor: pointer;\n\n        &:hover\n        {\n            opacity: .9;\n        }\n    }\n`;","import { initializeApp } from 'firebase/app'\nimport { getStorage } from 'firebase/storage'\n\nconst firebaseConfig = \n{\n\n    apiKey: process.env.REACT_APP_FIREBASE_APIKEY,\n  \n    authDomain: process.env.REACT_APP_FIREBASE_AUTHDOMAIN,\n  \n    projectId: process.env.REACT_APP_FIREBASE_PROJECTID,\n  \n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGEBUCKET,\n  \n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSEAGINGSENDERID,\n  \n    appId: process.env.REACT_APP_FIREBASE_APPID\n  \n};  \n\nconst firebaseApp = initializeApp(firebaseConfig);\n\nexport const storage = getStorage(firebaseApp);","import { Photo } from \"../types/Photo\"\nimport { storage } from '../libs/firebase'\nimport { ref, listAll, getDownloadURL, uploadBytes } from 'firebase/storage'\nimport { v4 as createId } from 'uuid'\n\nexport const getAll = async () => \n{\n    let list: Photo[] = [];\n\n    const imagesFolder = ref(storage, \"images\");\n    const photoList = await listAll(imagesFolder);\n\n    for(let i in photoList.items)\n    {\n        let photoUrl = await getDownloadURL(photoList.items[i]);\n\n        list.push(\n        {\n            name: photoList.items[i].name,\n            url: photoUrl\n        });\n    }\n\n    return list;\n}\n\nexport const insert = async (file: File) => \n{\n    if(['image/jpeg', 'image/jpg', 'image/png'].includes(file.type))\n    {\n        let randowName = createId();\n        let newFile = ref(storage, `images/${randowName}`);\n\n        let upload = await uploadBytes(newFile, file);\n        let photoUrl = await getDownloadURL(upload.ref)\n\n        return {\n            name: upload.ref.name,\n            url: photoUrl\n        } as Photo;\n    }\n    else\n    {\n        return new Error('Tipo de arquivo nÃ£o permitido.');\n    }\n}","import styled from \"styled-components\"\n\nexport const Container = styled.div`\n    background-color: #3D3F43;\n    border-radius: 10px;\n    padding: 10px;\n\n    img\n    {\n        max-width: 100%;\n        display: block;\n        margin-bottom: 10px;\n        border-radius: 10px;\n    }\n`;","import * as C from './styles'\n\ntype Props = \n{\n    url: string;\n    name: string\n}\n\nexport const PhotoItem = ({ url, name }: Props) =>\n{\n    return (\n        <C.Container>\n            <img src={url} alt={name} />\n            {name}\n        </C.Container>\n    )\n}"," import { useState, useEffect, FormEvent } from 'react'\n import * as C from './App.styles'\n import * as Photos from './services/photos'\n import { Photo } from './types/Photo'\n import { PhotoItem } from './components/PhotoItem'\n\n export default function App()\n {\n  const [uploading, setUploading] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [photos, setPhotos] = useState<Photo[]>([]);\n\n  useEffect(()=>{\n    const getPhotos = async () => {\n      setLoading(true);\n      setPhotos(await Photos.getAll());\n      setLoading(false);\n    }\n    getPhotos();\n  }, []);\n\n  const handleFormSubmit = async (e: FormEvent<HTMLFormElement>) => \n  {\n    e.preventDefault();\n\n    const formData = new FormData(e.currentTarget);\n    const file = formData.get('image') as File;\n    \n    if(file && file.size > 0)\n    {\n      setUploading(true);\n      let result = await Photos.insert(file);\n      setUploading(false);\n\n      if(result instanceof Error)\n      {\n        alert(`${result.name} - ${result.message}`);\n      }\n      else \n      {\n        let newPhotoList = [...photos];\n        newPhotoList.push(result);\n        setPhotos(newPhotoList);\n      }\n    }\n  }\n\n   return (\n     <C.Container>\n       <C.Area>\n         <C.Header>Galeria de Fotos</C.Header>\n\n        <C.UploadForm method=\"POST\" onSubmit={ handleFormSubmit} >\n          <input type=\"file\" name=\"image\" />\n          <input type=\"submit\" value=\"Enviar\" />\n          {uploading && \"Enviando...\"}\n        </C.UploadForm>\n\n         {loading &&\n          <C.ScreenWarning>\n            <div className=\"emoji\">ðŸ¤š</div>\n            <div>Carregando...</div>\n          </C.ScreenWarning>\n         }\n\n         {!loading && photos.length > 0 &&\n          <C.PhotoList>\n            {photos.map((item, index)=>(\n              <PhotoItem key={index} url={item.url} name={item.name} />\n            ))}\n          </C.PhotoList>\n         }\n\n         {!loading && photos.length === 0 &&\n          <C.ScreenWarning>\n            <div className=\"emoji\">ðŸ˜¥</div>\n            <div>NÃ£o tem fotos cadastradas !</div>\n          </C.ScreenWarning>\n         }\n       </C.Area>\n     </C.Container>\n   )\n }","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}